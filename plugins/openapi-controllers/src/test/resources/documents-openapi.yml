openapi: 3.0.1
info:
  title: "Documents API"
  version: 0.0.1
  description: "Documents API"
  contact:
    email: email@domain.com

paths:
  /documents/upload:
    post:
      operationId: uploadDocument
      description: "uploadDocument"
      tags: [Document]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - type: object
                  properties:
                    file:
                      type: string
                      format: binary
                - $ref: "#/components/schemas/DocumentInfo"

      responses:
        "201":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentInfo"

components:
  schemas:
    DocumentInfo:
      type: "object"
      x-business-entity: "DocumentInfo"
      required:
      - "fileName"
      - "documentType"
      - "contentType"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        version:
          type: "integer"
          description: "Version of the document (required in PUT for concurrency control,\
            \ should be null in POSTs)."
        uuid:
          type: "string"
        fileName:
          type: "string"
        documentType:
          type: "string"
        contentType:
          type: "string"
        tags:
          type: "array"
          items:
            type: "string"
        documentData:
          $ref: "#/components/schemas/DocumentData"
    DocumentData:
      type: "object"
      x-business-entity: "DocumentData"
      required:
      - "data"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        version:
          type: "integer"
          description: "Version of the document (required in PUT for concurrency control,\
            \ should be null in POSTs)."
        data:
          type: "string"
          format: "binary"

    Page:
      type: object
      required:
        - "content"
        - "totalElements"
        - "totalPages"
        - "size"
        - "number"
      properties:
        number:
          type: integer
          minimum: 0
        numberOfElements:
          type: integer
          minimum: 0
        size:
          type: integer
          minimum: 0
          maximum: 200
          multipleOf: 25
        totalElements:
          type: integer
        totalPages:
          type: integer

  parameters:
    page:
      name: page
      in: query
      description: The number of results page
      schema:
        type: integer
        format: int32
        default: 0
    limit:
      name: limit
      in: query
      description: The number of results in a single page
      schema:
        type: integer
        format: int32
        default: 20
    sort:
      name: sort
      in: query
      description: The number of results page
      schema:
        type: array
        items:
          type: string

  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
    bearerAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - basicAuth: []  # <-- use the same name here
  - bearerAuth: []  # <-- use the same name here
