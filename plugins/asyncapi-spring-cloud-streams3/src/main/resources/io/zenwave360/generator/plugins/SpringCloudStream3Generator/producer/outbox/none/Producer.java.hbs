package {{apiPackage}};

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.function.StreamBridge;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageHeaders;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Component;

{{#if modelPackage}}
import {{modelPackage}}.*;
{{/if}}

/**
 * {{asyncapi.description}}
 */
@Component
public class {{apiClassName}} implements I{{apiClassName}} {

    protected Logger log = LoggerFactory.getLogger(getClass());

    protected StreamBridge streamBridge;

    public {{apiClassName}}(StreamBridge streamBridge) {
        this.streamBridge = streamBridge;
    }

{{~#each operations as |operation|}}
    public String {{operation.operationId}}BindingName = "{{operation.x--operationIdKebabCase}}-out{{bindingSuffix}}";
{{/each}}

{{~#each operations as |operation|}}
    {{#each operation.x--messages as |message|}}
    /**
     * {{{operation.summary}}}
     */
    public boolean {{operation.operationId}}({{message.x--javaType}} payload, {{message.x--javaTypeSimpleName}}Headers headers) {
        log.debug("Sending message to topic: {}", {{operation.operationId}}BindingName);
        Message message = MessageBuilder.createMessage(payload, new MessageHeaders(headers));
        return streamBridge.send({{operation.operationId}}BindingName, message);
    }

    {{/each}}
{{/each}}

}
