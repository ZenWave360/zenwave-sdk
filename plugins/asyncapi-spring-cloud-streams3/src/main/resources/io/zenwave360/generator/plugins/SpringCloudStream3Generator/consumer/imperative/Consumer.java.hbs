package {{apiPackage}};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Component;
import java.util.function.Consumer;

{{#if modelPackage}}
import {{modelPackage}}.*;
{{/if}}

@Component("{{operation.x--operationIdKebabCase}}")
public class {{consumerName operation.x--operationIdCamelCase}} implements Consumer<Message<Object>> {

    @Autowired
    private {{serviceName operation.x--operationIdCamelCase}} service;

    @Override
    public void accept(Message<Object> message) {
        Object payload = message.getPayload();
        {{#each operation.x--messages as |message|}}
        if(payload instanceof {{message.x--javaType}}) {
            {{#if exposeMessage}}
            service.{{operation.operationId}}{{methodSuffix message operation}}(MessageBuilder.createMessage(({{message.x--javaType}}) payload, message.getHeaders()));
            {{else}}
            service.{{operation.operationId}}{{methodSuffix message operation}}(({{message.x--javaType}}) payload);
            {{/if}}
            return;
        }
        {{/each}}
    }
}