package {{basePackage}}.core.domain;

import java.io.Serializable;
import java.math.*;
import java.time.*;
import java.util.*;
import javax.validation.constraints.*;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.Version;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.DocumentReference;
import org.springframework.data.mongodb.core.mapping.Field;
{{~#if entity.options.auditing}}
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
{{/if}}

/**
* {{entity.comment}}
*/
{{#unless (skipEntityId entity)~}}@Document(collection = "{{entity.tableName}}"){{/unless~}}
public class {{entity.className}} {{addExtends entity}} implements Serializable {

    private static final long serialVersionUID = 1L;

{{#unless (skipEntityId entity)~}}
    @Id
    private {{idJavaType}} id;
    @Version
    private Integer version;
{{/unless~}}
{{#each entity.fields as |field|}}
    {{fieldPersistenceAnnotations field}}
    {{{fieldValidationAnnotations field}}}
    private {{{fieldType field}}} {{field.name}};
{{/each}}

{{~#if entity.options.auditing}}
    @CreatedDate
    private OffsetDateTime createdDate;
    @LastModifiedDate
    private OffsetDateTime lastModifiedDate;
{{/if~}}

{{#unless (skipEntityId entity)~}}
    public {{idJavaType}} getId() {
        return id;
    }
    public {{entity.className}} withId({{idJavaType}} id) {
        this.id = id;
        return this;
    }
    public void setId({{idJavaType}} id) {
        this.id = id;
    }
    public Integer getVersion() {
        return version;
    }
    public void setVersion(Integer version) {
        this.version = version;
    }
{{/unless~}}

{{#each entity.fields as |field|}}
    {{~#if field.isArray}}
    public {{entity.className}} add{{capitalize field.name}}({{javaType field}} {{field.name}}) {
        this.{{field.name}}.add({{field.name}});
        return this;
    }
    {{~/if}}
    public {{entity.className}} with{{capitalize field.name}}({{{fieldType field}}} {{field.name}}) {
        this.{{field.name}} = {{field.name}};
        return this;
    }
{{/each}}

{{#each entity.fields as |field|}}
    public {{{fieldType field}}} get{{capitalize field.name}}() {
        return {{field.name}};
    }

    public void set{{capitalize field.name}}({{{fieldType field}}} {{field.name}}) {
        this.{{field.name}} = {{field.name}};
    }
{{/each}}

{{~#if entity.options.auditing}}
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }
{{/if}}
}
