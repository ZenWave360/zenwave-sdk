package {{basePackage}}.core.inbound.dtos;

import {{basePackage}}.core.domain.*;
import java.io.Serializable;
import java.math.*;
import java.time.*;
import java.util.*;
import javax.validation.constraints.*;

/**
 *
 */
public class {{entity.className}}{{inputDTOSuffix}} implements Serializable {

{{#unless (skipEntityId entity)~}}
    private String id;
{{/unless~}}

{{#each entity.fields as |field|}}
    {{#each field.validations as |validation|}}
    // @{{validation.name}}("{{validation.value}}")
    {{/each}}
    {{#assign "typeSuffix"}}{{#if field.isEntity}}{{inputDTOSuffix}}{{/if}}{{/assign}}
    private {{{fieldType field suffix=typeSuffix}}} {{field.name}};
{{/each}}

{{#unless (skipEntityId entity)~}}
    public String getId() {
        return id;
    }
    public {{entity.className}}{{inputDTOSuffix}} withId(String id) {
        this.id = id;
        return this;
    }
    public void setId(String id) {
        this.id = id;
    }
{{/unless~}}

{{#each entity.fields as |field|}}
    {{#assign "typeSuffix"}}{{#if field.isEntity}}{{inputDTOSuffix}}{{/if}}{{/assign}}
    {{~#if field.isArray}}
        public {{entity.className}}{{inputDTOSuffix}} add{{capitalize field.name}}({{field.type}}{{typeSuffix}} {{field.name}}) {
        this.{{field.name}}.add({{field.name}});
        return this;
        }
    {{~/if}}
    public {{entity.className}}{{inputDTOSuffix}} with{{capitalize field.name}}({{{fieldType field suffix=typeSuffix}}} {{field.name}}) {
        this.{{field.name}} = {{field.name}};
        return this;
    }
{{/each}}

{{#each entity.fields as |field|}}
    {{~#assign "typeSuffix"}}{{#if field.isEntity}}{{inputDTOSuffix}}{{/if}}{{/assign}}
    public {{{fieldType field suffix=typeSuffix}}} get{{capitalize field.name}}() {
        return {{field.name}};
    }

    public void set{{capitalize field.name}}({{{fieldType field suffix=typeSuffix}}} {{field.name}}) {
        this.{{field.name}} = {{field.name}};
    }
{{/each}}
}
