package {{layout.coreImplementationPackage}};

import {{layout.configPackage}}.*;
import {{layout.entitiesPackage}}.*;
import {{layout.inboundPackage}}.*;
import {{layout.inboundDtosPackage}}.*;
import {{layout.coreImplementationPackage}}.mappers.*;
import {{layout.outboundRepositoryPackage}}.*;
import {{layout.infrastructureRepositoryPackage}}.inmemory.*;


import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mapstruct.factory.Mappers;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.PageRequest;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.mockito.Mockito.*;

/**
 * Acceptance Test for {{service.name}}.
 */
class {{service.name}}Test  {

    private final Logger log = LoggerFactory.getLogger(getClass());

    ServicesInMemoryConfig context = new ServicesInMemoryConfig();
    {{~#assign "serviceInstance"}}{{asInstanceName service.name}}{{/assign}}
    {{service.name}}Impl {{serviceInstance}} = context.{{serviceInstance}}();
{{#each entities as |entity|}}
    {{entity.className}}RepositoryInMemory {{entity.instanceName}}Repository = context.{{entity.instanceName}}Repository();
{{/each}}
	@BeforeEach
	void setUp() {
		context.reloadTestData();
	}

{{#each service.methods as |method|}}
    @Test
    void {{method.name}}Test() {
        {{~> (partial 'testMethodBody')~}}
    }
{{/each}}
}
