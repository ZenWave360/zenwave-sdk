package {{basePackage}}.core.outbound.search;

import {{basePackage}}.core.domain.search.*;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate;
import org.springframework.data.elasticsearch.client.erhlc.NativeSearchQuery;
import org.springframework.data.elasticsearch.core.SearchHit;
import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;

//import static org.elasticsearch.index.query.QueryBuilders.queryStringQuery;

/**
 * Spring Data Elasticsearch repository for the {@link {{entity.className}}{{searchDTOSuffix}} } entity.
 */
public interface {{entity.className}}SearchRepository extends ElasticsearchRepository<{{entity.className}}{{searchDTOSuffix}}, {{idJavaType}}>, {{entity.className}}SearchRepositoryInternal {}

interface {{entity.className}}SearchRepositoryInternal {
    Page<{{entity.className}}{{searchDTOSuffix}}> search(String query, Pageable pageable);
}

class {{entity.className}}SearchRepositoryInternalImpl implements {{entity.className}}SearchRepositoryInternal {

    private final ElasticsearchTemplate elasticsearchTemplate;

    {{entity.className}}SearchRepositoryInternalImpl(ElasticsearchTemplate elasticsearchTemplate) {
        this.elasticsearchTemplate = elasticsearchTemplate;
    }

    @Override
    public Page<{{entity.className}}{{searchDTOSuffix}}> search(String query, Pageable pageable) {
        /* TODO: implement search
        NativeSearchQuery nativeSearchQuery = new NativeSearchQuery(queryStringQuery(query));
        nativeSearchQuery.setPageable(pageable);
        List<{{entity.className}}{{searchDTOSuffix}}> hits = elasticsearchTemplate
            .search(nativeSearchQuery, {{entity.className}}{{searchDTOSuffix}}.class)
            .map(SearchHit::getContent)
            .stream()
            .collect(Collectors.toList());

        return new PageImpl<>(hits, pageable, hits.size());
        */
        return null;
    }
}
