asyncapi: 3.0.0
info:
  title: "{{{zdlModel.config.title}}}"
  version: 0.0.1
  tags:
    - name: "Default"
  {{~#each zdlModel.serviceNames as |serviceName|}}
    - name: "{{asTagName serviceName}}"
  {{~/each}}

defaultContentType: application/json

channels:
{{~#each zdlModel.channels as |channel|}}
  {{@key}}:
    address: "{{channel.address}}"
    messages:
    {{~#each channel.messages as |message|}}
      {{@key}}:
        $ref: '#/components/messages/{{@key}}'
    {{~/each}}
{{~/each}}

operations:
{{~#each zdlModel.operations as |operation|}}
  {{@key}}:
    action: {{operation.action}}
    tags:
      - name: {{asTagName operation.serviceName}}
    channel:
      $ref: '#/channels/{{operation.channel}}'
{{~/each}}


components:
  messages:
{{~#each zdlModel.messages as |message|}}
    {{message.name}}Message:
      name: {{message.name}}Message
      title: "{{message.javadoc}}"
      summary: "{{message.javadoc}}"
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
      {{~#if isDefaultSchemaFormat}}
        $ref: "{{payloadRef message}}"
      {{~else}}
        schemaFormat: {{{schemaFormatString}}}
        schema:
          $ref: "{{payloadRef message}}"
      {{~/if}}
{{~/each}}

  messageTraits:
    CommonHeaders:
      headers:
        type: object
        properties:
{{~#unless (or includeKafkaCommonHeaders includeCloudEventsHeaders)}}
          common_header:
            type: string
            description: Example header field. Customize headers according to your messaging requirements.
{{~/unless}}
{{~#if includeKafkaCommonHeaders}}
          kafka_messageKey:
            type: "{{idType}}"
            {{#if idTypeFormat}}format: "{{idTypeFormat}}"{{/if}}
            description: This header value will be populated automatically at runtime
            x-runtime-expression: $message.payload#/id
{{~/if}}
{{~#if includeCloudEventsHeaders}}
          # CloudEvents Attributes
          ce-id:
            type: string
            description: Unique identifier for the event
            x-runtime-expression: $message.payload#{#this.id}
          ce-source:
            type: string
            description: URI identifying the context where event happened
            x-runtime-expression: $message.payload#{"{{asTagName (jsonPath zdlModel 'serviceNames[0]')}}"}
          ce-specversion:
            type: string
            description: CloudEvents specification version
            x-runtime-expression: $message.payload#{"1.0"}
          ce-type:
            type: string
            description: Event type
            x-runtime-expression: $message.payload#{#this.getClass().getSimpleName()}
          ce-time:
            type: string
            description: Timestamp of when the event happened
            x-runtime-expression: $message.payload#{T(java.time.Instant).now().toString()}
{{~/if}}

{{{schemasAsString}}}
