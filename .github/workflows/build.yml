name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout badges branch to a badges directory nested inside first checkout
        uses: actions/checkout@v2
        with:
          ref: badges
          path: badges

      - name: Set up the Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build with Maven
        run: mvn -B test

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true
          jacoco-csv-file: >
            ./plugins/asyncapi-spring-cloud-streams3/target/site/jacoco/jacoco.csv
            ./plugins/java-to-jdl/target/site/jacoco/jacoco.csv
            ./plugins/jdl-backend-application-default/target/site/jacoco/jacoco.csv
            ./plugins/jdl-openapi-controllers/target/site/jacoco/jacoco.csv
            ./plugins/jdl-to-openapi/target/site/jacoco/jacoco.csv
            ./plugins/jdl-to-asyncapi/target/site/jacoco/jacoco.csv
            ./plugins/openapi-spring-webtestclient/target/site/jacoco/jacoco.csv
            ./zenwave-code-generator-cli/target/site/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Packs Jacoco Reports
        run: |
          rm -rf badges/jacoco
          mkdir -p badges/jacoco
          echo "GROUP,PACKAGE,CLASS,INSTRUCTION_MISSED,INSTRUCTION_COVERED,BRANCH_MISSED,BRANCH_COVERED,LINE_MISSED,LINE_COVERED,COMPLEXITY_MISSED,COMPLEXITY_COVERED,METHOD_MISSED,METHOD_COVERED" > badges/jacoco-report.csv
          find -name 'jacoco.csv' -exec sed '1d' {} \; >> badges/jacoco-report.csv
          tar -c `find -name jacoco.csv` `find -name jacoco.exec` `find -name jacoco.xml` | tar -C badges/jacoco -x


      - name: Commit and push the coverage badges and summary file
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo $(ls -l)
          cd badges
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'github-agit pctions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg *.json jacoco-report.csv jacoco/*
            git commit -m "coverage = ${{ steps.jacoco.outputs.coverage }} branches = ${{ steps.jacoco.outputs.branches }}" *.svg *.json jacoco-report.csv jacoco/*
            git push
          fi

      - name: Comment on PR with coverage percentages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT=$(<badges/zenwave-code-generator-cli/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics (zenwave-code-generator-cli)${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to the Maven Central Repository
        run: mvn --batch-mode deploy -DupdateReleaseInfo=true
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          SIGN_KEY: ${{ secrets.SIGN_KEY }}
          SIGN_KEY_PASS: ${{ secrets.SIGN_KEY_PASS }}
