<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.github.zenwave360</groupId>
	<artifactId>asyncapi-spring-cloud-streams-examples</artifactId>
	<version>0.1.1-SNAPSHOT</version>
	<name>${pom.groupId}:${pom.artifactId}</name>

	<properties>
		<java.version>17</java.version>
		<spring-boot.version>${pom.parent.version}</spring-boot.version>
		<archunit-junit5.version>0.22.0</archunit-junit5.version>
		<mapstruct.version>1.5.1.Final</mapstruct.version>
		<spring-cloud.version>2021.0.3</spring-cloud.version>
		<avro.version>1.11.1</avro.version>
		<testcontainers.version>1.17.2</testcontainers.version>

		<zenwave.version>0.3.1-SNAPSHOT</zenwave.version>

		<!-- Plugin versions -->
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-javadoc-plugin.version>3.3.1</maven-javadoc-plugin.version>
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.3.2</maven-war-plugin.version>
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<checkstyle.version>9.2</checkstyle.version>
		<nohttp-checkstyle.version>0.0.10</nohttp-checkstyle.version>
		<git-commit-id-plugin.version>5.0.0</git-commit-id-plugin.version>
		<modernizer-maven-plugin.version>2.3.0</modernizer-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<jib-maven-plugin.version>3.1.4</jib-maven-plugin.version>
		<jib-maven-plugin.image>eclipse-temurin:11-jre-focal</jib-maven-plugin.image>
		<jib-maven-plugin.architecture>amd64</jib-maven-plugin.architecture>
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<openapi-generator-maven-plugin.version>5.3.1</openapi-generator-maven-plugin.version>
		<properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
		<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<scope>test</scope>
			<classifier>test-binder</classifier>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>kafka</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.gaul</groupId>
				<artifactId>modernizer-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.github.zenwave360</groupId>
				<artifactId>zenwave-code-generator-mojo</artifactId>
				<version>${zenwave.version}</version>
				<executions>
					<execution>
						<id>generate-asyncapi-producer</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>PROVIDER</role>
								<style>IMPERATIVE</style>
								<apiPackage>io.zenwave360.example.adapters.events</apiPackage>
								<modelPackage>io.zenwave360.example.adapters.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-dtos</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>jsonschema2pojo</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi.yml</inputSpec>
							<configOptions>
								<apiPackage>io.zenwave360.example.adapters.events</apiPackage>
								<modelPackage>io.zenwave360.example.adapters.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-avro</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi-avro.yml</inputSpec>
							<configOptions>
								<role>PROVIDER</role>
								<style>IMPERATIVE</style>
								<apiPackage>io.zenwave360.example.adapters.events</apiPackage>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-code-generator.plugins</groupId>
						<artifactId>asyncapi-spring-cloud-streams3</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-code-generator.plugins</groupId>
						<artifactId>asyncapi-jsonschema2pojo</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/resources/model/avro/</sourceDirectory>
							<outputDirectory>${project.basedir}/target/generated-sources/avro/src/main/java/</outputDirectory>
							<includes>
								<include>*.avsc</include>
							</includes>
							<imports>
								<import>${project.basedir}/src/main/resources/model/avro/Customer.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/PaymentDetails.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/ShippingDetails.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderedItem.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderStatus.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrder.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrderSearchCriteria.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerCreatedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerUpdatedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerDeletedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderStatusCreatedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderStatusDeletedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderStatusUpdatedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrderCreatedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrderDeletedPayload.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrderUpdatedPayload.avsc</import>
							</imports>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
