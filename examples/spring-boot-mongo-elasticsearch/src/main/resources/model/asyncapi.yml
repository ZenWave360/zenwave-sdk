asyncapi: 2.4.0
info:
  title: Zenwave 360 Generated API
  version: 0.0.1

defaultContentType: application/json

tags:
  - name: "Default"
  - name: "Customer"
  - name: "CustomerOrder"

channels:
  customers:
    publish:
      summary: Customer Channel Events
      operationId: onCustomerEvent
      tags:
        - name: Customer
      message:
        oneOf:
          - $ref: "#/components/messages/CustomerCreatedMessage"
          - $ref: "#/components/messages/CustomerUpdatedMessage"
          - $ref: "#/components/messages/CustomerDeletedMessage"
  
  customer-orders:
    publish:
      summary: CustomerOrder Channel Events
      operationId: onCustomerOrderEvent
      tags:
        - name: CustomerOrder
      message:
        oneOf:
          - $ref: "#/components/messages/CustomerOrderCreatedMessage"
          - $ref: "#/components/messages/CustomerOrderUpdatedMessage"
          - $ref: "#/components/messages/CustomerOrderDeletedMessage"
  

components:
  messages:
    CustomerCreatedMessage:
      name: CustomerCreated
      title: Message for Customer Created Event
      summary: Message for Customer Created Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerCreatedPayload"
    CustomerUpdatedMessage:
      name: CustomerUpdated
      title: Message for Customer Updated Event
      summary: Message for Customer Updated Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerUpdatedPayload"
    CustomerDeletedMessage:
      name: CustomerDeleted
      title: Message for Customer Deleted Event
      summary: Message for Customer Deleted Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerDeletedPayload"
  
    CustomerOrderCreatedMessage:
      name: CustomerOrderCreated
      title: Message for CustomerOrder Created Event
      summary: Message for CustomerOrder Created Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerOrderCreatedPayload"
    CustomerOrderUpdatedMessage:
      name: CustomerOrderUpdated
      title: Message for CustomerOrder Updated Event
      summary: Message for CustomerOrder Updated Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerOrderUpdatedPayload"
    CustomerOrderDeletedMessage:
      name: CustomerOrderDeleted
      title: Message for CustomerOrder Deleted Event
      summary: Message for CustomerOrder Deleted Event
      schemaFormat: application/vnd.aai.asyncapi;version=2.4.0
      payload:
        $ref: "#/components/schemas/CustomerOrderDeletedPayload"
  

  schemas:
    Customer:
      type: "object"
      x-business-entity: "Customer"
      required:
      - "firstName"
      - "lastName"
      - "password"
      - "email"
      - "username"
      properties:
        id:
          type: "string"
        firstName:
          type: "string"
          minLength: 3
          maxLength: 250
        lastName:
          type: "string"
          minLength: 3
          maxLength: 250
        password:
          type: "string"
          minLength: 3
          maxLength: 250
        email:
          type: "string"
          minLength: 3
          maxLength: 250
        username:
          type: "string"
          minLength: 3
          maxLength: 250
    CustomerOrder:
      type: "object"
      x-business-entity: "CustomerOrder"
      properties:
        id:
          type: "string"
        date:
          type: "string"
          format: "date-time"
        shippingDetails:
          $ref: "#/components/schemas/ShippingDetails"
        orderedItems:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderedItem"
        paymentDetails:
          type: "array"
          items:
            $ref: "#/components/schemas/PaymentDetails"
        status:
          $ref: "#/components/schemas/OrderStatus"
        customer:
          $ref: "#/components/schemas/Customer"
    ShippingDetails:
      type: "object"
      x-business-entity: "ShippingDetails"
      properties:
        address:
          type: "string"
    CustomerOrderSearchCriteria:
      type: "object"
      x-business-entity: "CustomerOrderSearchCriteria"
      properties:
        id:
          type: "string"
        dateTo:
          type: "string"
          format: "date-time"
        dateFrom:
          type: "string"
          format: "date-time"
        status:
          $ref: "#/components/schemas/OrderStatus"
    PaymentDetails:
      type: "object"
      x-business-entity: "PaymentDetails"
      properties:
        creditCardNumber:
          type: "string"
    OrderedItem:
      type: "object"
      x-business-entity: "OrderedItem"
      required:
      - "name"
      - "price"
      properties:
        catalogItemId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          minLength: 3
          maxLength: 250
        quantity:
          type: "integer"
          format: "int32"
        price:
          type: "number"
          format: "double"
    OrderStatus:
      type: "string"
      x-business-entity: "OrderStatus"
      enum:
      - "DELIVERED"
      - "CONFIRMED"
      - "SHIPPED"

    CustomerCreatedPayload:
      type: object
      properties:
        customerId:
          type: string
        customer:
          $ref: "#/components/schemas/Customer"
    CustomerUpdatedPayload:
      type: object
      properties:
        customerId:
          type: string
        customer:
          $ref: "#/components/schemas/Customer"
    CustomerDeletedPayload:
      type: object
      properties:
        customerId:
          type: string
  
    CustomerOrderCreatedPayload:
      type: object
      properties:
        customerOrderId:
          type: string
        customerOrder:
          $ref: "#/components/schemas/CustomerOrder"
    CustomerOrderUpdatedPayload:
      type: object
      properties:
        customerOrderId:
          type: string
        customerOrder:
          $ref: "#/components/schemas/CustomerOrder"
    CustomerOrderDeletedPayload:
      type: object
      properties:
        customerOrderId:
          type: string
  
