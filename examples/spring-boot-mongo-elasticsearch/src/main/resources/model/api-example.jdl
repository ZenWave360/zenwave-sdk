entity Organization {
    name String required
    description String
    url String required pattern(/^(http|https):.*$/)
}

entity Team {
    name String required
    description String
}

@searchCriteria
entity Domain {
    name String required
    description String
}

enum RoleType {
    ORG_ADMIN /** Organization Admin */
    TEAM_ADMIN /** Team Admin */
    DESIGNER /** Designer: publishes API definitions */
    DEVELOPER /** Developer: uses API definitions */
}

@Embedded
entity TeamRole {
    teamId String
    roleType RoleType
}

entity AppUser {
    login String required
    name String required
    email String required
    roles TeamRole[]
}

enum ArtifactStatus {
    DRAFT /** Draft */
    PUBLISHED /** Published to Example */
    AVAILABLE /** Deployed and Available for use */
    DEPRECATED /** Deprecated */

    RETIRED /** Undeployed */
}

enum VisibilityType {
    INTERNAL
    PUBLIC
    PARTNER
}

@aggregate
@search(elasticsearch)
entity Artifact {
    name String required
    description String

    domainId String
    artifactId ArtifactId

    status ArtifactStatus
    tags String[]
    visibility VisibilityType

    mainFile ArtifactFile
    files ArtifactFile[]
}

@Embedded
entity ArtifactId {
    groupId String required
    artifactId String required
    version String required
}

entity ArtifactFile {
    name String required
    artifactId ArtifactId
    relativePath String required
    content String
}

enum Permission {
    READ /** Read */
    PUBLISH /** Publish */
    MANAGE /** Manage */
}

entity ACL {
    domainId String
    teamId String
    userId String
    groupId String
    artifactId String
    permission Permission
}


service Organization,Team,Domain,TeamRole,AppUser with OrganizationUseCases

service Artifact with ArtifactsUseCases

service ACL with ACLUseCases
