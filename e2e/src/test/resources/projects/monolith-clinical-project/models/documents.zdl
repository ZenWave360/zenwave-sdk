config {
    title "Documents Model"
    moduleBasePackage "com.example.clinical.modules.documents"
    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout
    layout SimpleDomainProjectLayout
}

@aggregate
entity DocumentInfo {
    uuid String /** certivera uuid */
    fileName String required
    documentType DocumentType required
    contentType String required
}

entity DocumentData {
    data Blob required
}

relationship OneToOne {
    DocumentInfo{documentData required } to @Id DocumentData{document required}
}

enum DocumentType {
    PROFILE_PICTURE
    GENERAL_INFORMATION
    HEALTH_INSURANCE_CARD
    INFORMED_CONSENT_TEMPLATE
    INFORMED_CONSENT_SIGNED
    LOAN_AGREEMENT_TEMPLATE
    LOAN_AGREEMENT_SIGNED
    OTHER
}

@inline
input DocumentIds {
    documentIds Long[]
}

@inline
input RequestDocumentSignature {
    documentInfo DocumentInfo required
    language String required /** Language for the certificate. Available values : es, ca, sv, en, it */
}

@rest("/documents")
service DocumentService for (DocumentInfo) {

    @get({path: "/"})
    listDocumentInfo(DocumentIds) DocumentInfo[]

    @get({path: "/{id}", params: {download: boolean} })
    downloadDocument(id) DocumentInfo


    @post({path: "/upload", status: 201})
    uploadDocument(DocumentInfo) DocumentInfo

    @post({path: "/certificate", status: 201})
    uploadDocumentAndCertificate(RequestDocumentSignature) DocumentInfo withEvents DocumentSignatureRequested


    @delete({path: "/{id}", status: 204})
    deleteDocumentInfo(id)
}

event DocumentSignatureRequested {
    userId Long
    documentInfo DocumentInfo
}
