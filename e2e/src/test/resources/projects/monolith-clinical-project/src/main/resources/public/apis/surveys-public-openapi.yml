openapi: 3.0.1
info:
  title: "Surveys - Public API"
  version: 0.0.1
  description: "Surveys - Public API"
  contact:
    email: email@domain.com
servers:
  - description: localhost
    url: http://localhost:8080/api
  - description: custom
    url: "{protocol}://{server}/{path}"
    variables:
      protocol:
        enum: ['http', 'https']
        default: 'http'
      server:
        default: 'localhost:8080'
      path:
        default: 'api'
tags:
  - name: "Default"
  - name: "SurveysBackoffice"
  - name: "Surveys"


paths:
  /public/surveys/{name}/patient/{patientId}/questions:
    get:
      operationId: getSurveyAndQuestionsForPatient
      description: "getSurveyAndQuestionsForPatient"
      tags: [Surveys]
      parameters:
        - name: "name"
          in: path
          required: true
          schema:
            type: string
        - name: "patientId"
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: "lang"
          in: query
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyAndQuestions"
  /public/surveys/{name}/patient/{patientId}/answers:
    post:
      operationId: answerSurvey
      description: "answerSurvey"
      tags: [Surveys]
      parameters:
        - name: "name"
          in: path
          required: true
          schema:
            type: string
        - name: "patientId"
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurveyAnswers"
      responses:
        "201":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyAnswers"
  /public/surveys/{name}/patient/{patientId}/answers/{date}:
    patch:
      operationId: updateSurveyAnswers
      description: "updateSurveyAnswers"
      tags: [Surveys]
      parameters:
        - name: "name"
          in: path
          required: true
          schema:
            type: string
        - name: "patientId"
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: "date"
          in: path
          required: true
          schema:
            type: string
        - name: "surveryId"
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurveyAnswersPatch"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyAnswers"
    get:
      operationId: getSurveyAnswers
      description: "getSurveyAnswers"
      tags: [Surveys]
      parameters:
        - name: "name"
          in: path
          required: true
          schema:
            type: string
        - name: "patientId"
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: "date"
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyAnswers"

components:
  schemas:
    SurveyAnswers:
      type: "object"
      x-business-entity: "SurveyAnswers"
      required:
      - "surveyId"
      - "patientId"
      - "date"
      - "lang"
      properties:
        id:
          type: "integer"
          format: "int64"
        version:
          type: "integer"
        surveyId:
          type: "integer"
          format: "int64"
        patientId:
          type: "integer"
          format: "int64"
        date:
          type: "string"
          format: "date"
        lang:
          type: "string"
        answers:
          type: "array"
          items:
            $ref: "#/components/schemas/Answer"
    SurveyAndQuestions:
      type: "object"
      x-business-entity: "SurveyAndQuestions"
      required:
      - "surveyId"
      - "name"
      - "title"
      - "hospitalId"
      - "lang"
      properties:
        surveyId:
          type: "integer"
          format: "int64"
          description: "Persistence identifier for the survey"
        name:
          type: "string"
          maxLength: 254
          description: "Unique identifier for the survey across all environments"
        title:
          type: "string"
          maxLength: 254
          description: "Public title for the survey"
        hospitalId:
          type: "integer"
          format: "int64"
        lang:
          type: "string"
          maxLength: 3
          description: "Default language for this survey"
        sections:
          type: "array"
          items:
            $ref: "#/components/schemas/SurveySectionOutput"
    Answer:
      type: "object"
      x-business-entity: "Answer"
      required:
      - "questionId"
      properties:
        questionId:
          type: "integer"
          format: "int64"
        value:
          type: "string"
        values:
          type: "array"
          items:
            type: "string"
        otherValue:
          type: "string"
    QuestionTranslationOutput:
      type: "object"
      x-business-entity: "QuestionTranslationOutput"
      required:
      - "questionId"
      - "text"
      - "questionType"
      properties:
        questionId:
          type: "integer"
          format: "int64"
        required:
          type: "boolean"
        rangeStart:
          type: "integer"
          format: "int32"
        rangeEnd:
          type: "integer"
          format: "int32"
        text:
          type: "string"
          maxLength: 254
          description: "Translated text for the question"
        questionType:
          $ref: "#/components/schemas/QuestionType"
        options:
          type: "array"
          items:
            $ref: "#/components/schemas/OptionTranslationOutput"
        includeOther:
          type: "boolean"
    OptionTranslationOutput:
      type: "object"
      x-business-entity: "OptionTranslationOutput"
      required:
      - "name"
      - "text"
      properties:
        name:
          type: "string"
          maxLength: 254
          description: "Internal name for the option"
        text:
          type: "string"
          description: "Translated text for the option"
    QuestionType:
      type: "string"
      x-business-entity: "QuestionType"
      enum:
      - "YES_NO"
      - "MULTIPLE_SELECTION"
      - "SINGLE_SELECTION"
      - "TEXT"
      - "NUMBER"
      - "DECIMAL"
      - "RANGE"
    SurveySectionOutput:
      type: "object"
      x-business-entity: "SurveySectionOutput"
      required:
      - "name"
      - "title"
      properties:
        name:
          type: "string"
          maxLength: 254
          description: "Unique identifier for the section"
        title:
          type: "string"
          maxLength: 254
          description: "Public title for the section"
        summary:
          type: "string"
        questions:
          type: "array"
          items:
            $ref: "#/components/schemas/QuestionTranslationOutput"
    SurveyAnswersPatch:
      allOf:
      - $ref: "#/components/schemas/SurveyAnswers"

    Page:
      type: object
      required:
        - "content"
        - "totalElements"
        - "totalPages"
        - "size"
        - "number"
      properties:
        number:
          type: integer
          minimum: 0
        numberOfElements:
          type: integer
          minimum: 0
        size:
          type: integer
          minimum: 0
          maximum: 200
          multipleOf: 25
        totalElements:
          type: integer
        totalPages:
          type: integer

  parameters:
    page:
      name: page
      in: query
      description: The number of results page
      schema:
        type: integer
        format: int32
        default: 0
    limit:
      name: limit
      in: query
      description: The number of results in a single page
      schema:
        type: integer
        format: int32
        default: 20
    sort:
      name: sort
      in: query
      description: The number of results page
      schema:
        type: array
        items:
          type: string

  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
    bearerAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - basicAuth: []  # <-- use the same name here
  - bearerAuth: []  # <-- use the same name here
