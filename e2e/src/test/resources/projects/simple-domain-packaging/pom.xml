<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.zenwave360.example</groupId>
	<artifactId>zenwave-playground</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>ZenWave-SDK Examples Playground</description>
	<properties>
		<java.version>17</java.version>
		<spring-boot.version>${project.parent.version}</spring-boot.version>
		<spring-cloud.version>2022.0.4</spring-cloud.version>

		<zenwave.version>1.4.0-SNAPSHOT</zenwave.version>

		<jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<archunit-junit5.version>1.0.1</archunit-junit5.version>
		<spring-cloud-stream-schema.version>2.2.1.RELEASE</spring-cloud-stream-schema.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-schema</artifactId>
			<version>${spring-cloud-stream-schema.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta.validation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>0.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-api</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Adding the engine dependency to the surefire-plugin unfortunately does not work in the current version. -->
		<!-- https://www.archunit.org/userguide/html/000_Index.html#_junit_5 -->
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-engine</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/apis/openapi.yml</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>io.zenwave360.example.customer</apiPackage>
							<modelPackage>io.zenwave360.example.customer.dtos</modelPackage>
							<modelNameSuffix>DTO</modelNameSuffix>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<supportingFilesToGenerate>
								ApiUtil.java
							</supportingFilesToGenerate>
							<typeMappings>
								<typeMapping>Double=java.math.BigDecimal</typeMapping>
							</typeMappings>
							<configOptions>
								<useSpringBoot3>true</useSpringBoot3>
								<documentationProvider>none</documentationProvider>
								<openApiNullable>false</openApiNullable>
								<useOptional>true</useOptional>
								<useTags>true</useTags>
								<interfaceOnly>true</interfaceOnly>
								<delegatePattern>false</delegatePattern>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.github.zenwave360.zenwave-sdk</groupId>
				<artifactId>zenwave-sdk-maven-plugin</artifactId>
				<version>${zenwave.version}</version>
				<configuration>
					<inputSpec>${pom.basedir}/src/main/resources/apis/asyncapi.yml</inputSpec>
					<skip>false</skip>
					<addCompileSourceRoot>true</addCompileSourceRoot>
					<addTestCompileSourceRoot>true</addTestCompileSourceRoot>
				</configuration>
				<executions>
					<!-- DTOs -->
					<execution>
						<id>generate-asyncapi-dtos</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>jsonschema2pojo</generatorName>
							<configOptions>
								<modelPackage>io.zenwave360.example.customer.events.dtos</modelPackage>
<!--								<jsonschema2pojo.includeTypeInfo>true</jsonschema2pojo.includeTypeInfo>-->
								<jsonschema2pojo.isUseJakartaValidation>true</jsonschema2pojo.isUseJakartaValidation>
								<jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>
							</configOptions>
						</configuration>
					</execution>
					<!-- Generate PROVIDER -->
					<execution>
						<id>generate-asyncapi</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<configOptions>
								<role>provider</role>
								<style>imperative</style>
<!--								<transactionalOutbox>mongodb</transactionalOutbox>-->
								<modelPackage>io.zenwave360.example.customer.events.dtos</modelPackage>
								<producerApiPackage>io.zenwave360.example.customer.events</producerApiPackage>
								<consumerApiPackage>io.zenwave360.example.customer.commands</consumerApiPackage>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
						<artifactId>asyncapi-spring-cloud-streams3</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
						<artifactId>asyncapi-jsonschema2pojo</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
